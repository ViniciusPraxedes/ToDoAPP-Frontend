{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vini\\\\Documents\\\\ToDoREACT\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const [existingValues, setExistingValues] = useState([]);\n  const [isInputValid, setIsInputValid] = useState(true);\n  const inputRef = useRef(null);\n  const [counter, setCounter] = useState(1);\n  const incrementCounter = () => {\n    setCounter(prevCounter => prevCounter + 1);\n  };\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  const handleChange = e => {\n    setInput(e.target.value);\n    setIsInputValid(true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') {\n      setIsInputValid(false);\n    } else if (existingValues.includes(input)) {\n      setIsInputValid(false);\n    } else {\n      props.onSubmit({\n        id: counter,\n        text: input\n      });\n      incrementCounter();\n      setInput('');\n      setIsInputValid(true);\n      setExistingValues(prevValues => [...prevValues, input]);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, props.edit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Update your item\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    className: `todo-input ${!isInputValid ? 'invalid' : ''}`,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"todo-button edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a todo\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    className: `todo-input ${!isInputValid ? 'invalid' : ''}`,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Add todo\")));\n}\nexport default TodoForm;","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","existingValues","setExistingValues","isInputValid","setIsInputValid","inputRef","counter","setCounter","incrementCounter","prevCounter","current","focus","handleChange","e","target","handleSubmit","preventDefault","trim","includes","onSubmit","id","text","prevValues","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","placeholder","onChange","name","ref","type"],"sources":["C:/Users/Vini/Documents/ToDoREACT/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n  const [existingValues, setExistingValues] = useState([]);\r\n  const [isInputValid, setIsInputValid] = useState(true);\r\n\r\n  const inputRef = useRef(null);\r\n  const [counter, setCounter] = useState(1);\r\n\r\n  const incrementCounter = () => {\r\n    setCounter(prevCounter => prevCounter + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n    setIsInputValid(true);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (input.trim() === '') {\r\n      setIsInputValid(false);\r\n    } else if (existingValues.includes(input)) {\r\n      setIsInputValid(false);\r\n    } else {\r\n      props.onSubmit({\r\n        id: counter,\r\n        text: input\r\n      });\r\n      incrementCounter();\r\n      setInput('');\r\n      setIsInputValid(true);\r\n      setExistingValues(prevValues => [...prevValues, input]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className={`todo-input ${!isInputValid ? 'invalid' : ''}`}\r\n            ref={inputRef}\r\n          />\r\n          <button type='submit' className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className={`todo-input ${!isInputValid ? 'invalid' : ''}`}\r\n            ref={inputRef}\r\n          />\r\n          <button type='submit' className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}