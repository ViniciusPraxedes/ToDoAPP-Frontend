{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vini\\\\Documents\\\\ToDoREACT\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { apiClient } from './ApiClient';\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  fetchTodos();\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await apiClient.get(`/todos`);\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const addTodo = todo => {\n    apiClient.post(`/todos`, todo);\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n  const updateTodo = (originalText, text) => {\n    apiClient.put(`/todos/${originalText}`, text);\n    setTodos(prev => prev.map(item => item.text === originalText ? text : item));\n  };\n  const removeTodo = originalText => {\n    apiClient.delete(`/todos/${originalText}`);\n    const removedArr = [...todos].filter(todo => todo.text !== originalText);\n    setTodos(removedArr);\n  };\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"What's the Plan for Today?\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }));\n}\nexport default TodoList;","map":{"version":3,"names":["React","useState","useEffect","TodoForm","Todo","apiClient","TodoList","todos","setTodos","fetchTodos","response","get","data","json","error","console","addTodo","todo","post","text","test","newTodos","log","updateTodo","originalText","put","prev","map","item","removeTodo","delete","removedArr","filter","completeTodo","id","updatedTodos","isComplete","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit"],"sources":["C:/Users/Vini/Documents/ToDoREACT/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nimport { apiClient } from './ApiClient'\r\n\r\nfunction TodoList() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    fetchTodos();\r\n\r\n    useEffect(() => {\r\n      fetchTodos();\r\n    }, []);\r\n  \r\n    const fetchTodos = async () => {\r\n      try {\r\n        const response = await apiClient.get(`/todos`)\r\n        const data = await response.json();\r\n        setTodos(data);\r\n      } catch (error) {\r\n        console.error('Error fetching todos:', error);\r\n      }\r\n    };\r\n\r\n  \r\n    const addTodo = (todo) => {\r\n      apiClient.post(`/todos`, todo)\r\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n        return;\r\n      }\r\n  \r\n      const newTodos = [todo, ...todos];\r\n  \r\n      setTodos(newTodos);\r\n      console.log(...todos);\r\n    }\r\n\r\n    const updateTodo = (originalText, text) => {\r\n      apiClient.put(`/todos/${originalText}`, text)\r\n      setTodos(prev => prev.map(item => (item.text === originalText ? text : item)));\r\n    };\r\n  \r\n    const removeTodo = (originalText) => {\r\n      apiClient.delete(`/todos/${originalText}`)\r\n      const removedArr = [...todos].filter(todo => todo.text !== originalText);\r\n      setTodos(removedArr);\r\n    }\r\n\r\n\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map(todo => {\r\n          if (todo.id === id) {\r\n            todo.isComplete = !todo.isComplete;\r\n          }\r\n          return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n      };\r\n\r\n      \r\n\r\n\r\n      return (\r\n        <>\r\n          <h1>What's the Plan for Today?</h1>\r\n          <TodoForm onSubmit={addTodo} />\r\n          <Todo\r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n          />\r\n        </>\r\n      );\r\n}\r\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}