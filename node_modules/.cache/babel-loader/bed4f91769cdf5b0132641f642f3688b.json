{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vini\\\\Documents\\\\ToDoREACT\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { apiClient } from './ApiClient';\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    apiClient.post(`/todos`, todo);\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n  const updateTodo = (id, text) => {\n    apiClient.put(`/todos/${id}`);\n    setTodos(prev => prev.map(item => item.id === id ? todo : item));\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n  const removeTodo = id => {\n    apiClient.delete(`/todos/${id}`);\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n  };\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"What's the Plan for Today?\"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }));\n}\nexport default TodoList;","map":{"version":3,"names":["React","useState","useEffect","TodoForm","Todo","apiClient","TodoList","todos","setTodos","addTodo","todo","post","text","test","newTodos","console","log","updateTodo","id","put","prev","map","item","todoId","newValue","removeTodo","delete","removedArr","filter","completeTodo","updatedTodos","isComplete","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit"],"sources":["C:/Users/Vini/Documents/ToDoREACT/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nimport { apiClient } from './ApiClient'\r\n\r\nfunction TodoList() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n  \r\n    const addTodo = (todo) => {\r\n      apiClient.post(`/todos`, todo)\r\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n        return;\r\n      }\r\n  \r\n      const newTodos = [todo, ...todos];\r\n  \r\n      setTodos(newTodos);\r\n      console.log(...todos);\r\n    }\r\n\r\n    const updateTodo = (id, text) => {\r\n      apiClient.put(`/todos/${id}`)\r\n      setTodos(prev => prev.map(item => (item.id === id ? todo : item)));\r\n      setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n  \r\n    const removeTodo = (id) => {\r\n      apiClient.delete(`/todos/${id}`)\r\n      const removedArr = [...todos].filter(todo => todo.id !== id);\r\n      setTodos(removedArr);\r\n    }\r\n\r\n\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map(todo => {\r\n          if (todo.id === id) {\r\n            todo.isComplete = !todo.isComplete;\r\n          }\r\n          return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n      };\r\n\r\n      \r\n\r\n\r\n      return (\r\n        <>\r\n          <h1>What's the Plan for Today?</h1>\r\n          <TodoForm onSubmit={addTodo} />\r\n          <Todo\r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n          />\r\n        </>\r\n      );\r\n}\r\nexport default TodoList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,SAASC,SAAS,QAAQ,aAAa;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMQ,OAAO,GAAIC,IAAI,IAAK;IACxBL,SAAS,CAACM,IAAI,CAAE,QAAO,EAAED,IAAI,CAAC;IAC9B,IAAI,CAACA,IAAI,CAACE,IAAI,IAAI,OAAO,CAACC,IAAI,CAACH,IAAI,CAACE,IAAI,CAAC,EAAE;MACzC;IACF;IAEA,MAAME,QAAQ,GAAG,CAACJ,IAAI,EAAE,GAAGH,KAAK,CAAC;IAEjCC,QAAQ,CAACM,QAAQ,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,GAAGT,KAAK,CAAC;EACvB,CAAC;EAED,MAAMU,UAAU,GAAGA,CAACC,EAAE,EAAEN,IAAI,KAAK;IAC/BP,SAAS,CAACc,GAAG,CAAE,UAASD,EAAG,EAAC,CAAC;IAC7BV,QAAQ,CAACY,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAGR,IAAI,GAAGY,IAAK,CAAC,CAAC;IAClEd,QAAQ,CAACY,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKK,MAAM,GAAGC,QAAQ,GAAGF,IAAK,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMG,UAAU,GAAIP,EAAE,IAAK;IACzBb,SAAS,CAACqB,MAAM,CAAE,UAASR,EAAG,EAAC,CAAC;IAChC,MAAMS,UAAU,GAAG,CAAC,GAAGpB,KAAK,CAAC,CAACqB,MAAM,CAAClB,IAAI,IAAIA,IAAI,CAACQ,EAAE,KAAKA,EAAE,CAAC;IAC5DV,QAAQ,CAACmB,UAAU,CAAC;EACtB,CAAC;EAID,MAAME,YAAY,GAAIX,EAAE,IAAK;IACzB,IAAIY,YAAY,GAAGvB,KAAK,CAACc,GAAG,CAACX,IAAI,IAAI;MACnC,IAAIA,IAAI,CAACQ,EAAE,KAAKA,EAAE,EAAE;QAClBR,IAAI,CAACqB,UAAU,GAAG,CAACrB,IAAI,CAACqB,UAAU;MACpC;MACA,OAAOrB,IAAI;IACb,CAAC,CAAC;IACFF,QAAQ,CAACsB,YAAY,CAAC;EACxB,CAAC;EAKD,oBACE9B,KAAA,CAAAgC,aAAA,CAAAhC,KAAA,CAAAiC,QAAA,qBACEjC,KAAA,CAAAgC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4BAA8B,CAAC,eACnCvC,KAAA,CAAAgC,aAAA,CAAC7B,QAAQ;IAACqC,QAAQ,EAAE/B,OAAQ;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC/BvC,KAAA,CAAAgC,aAAA,CAAC5B,IAAI;IACHG,KAAK,EAAEA,KAAM;IACbsB,YAAY,EAAEA,YAAa;IAC3BJ,UAAU,EAAEA,UAAW;IACvBR,UAAU,EAAEA,UAAW;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CACD,CAAC;AAEX;AACA,eAAejC,QAAQ"},"metadata":{},"sourceType":"module"}