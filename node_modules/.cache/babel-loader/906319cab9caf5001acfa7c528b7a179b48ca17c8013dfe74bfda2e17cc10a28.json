{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vini\\\\Documents\\\\ToDoREACT\\\\src\\\\components\\\\todo\\\\ListTodosComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { getTodos, deleteTodo } from \"./api/TodoApiService\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListTodosComponent() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const today = new Date();\n  const navigate = useNavigate();\n  const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay());\n  const [todos, setTodos] = useState([]);\n  const [message, setMessage] = useState(null);\n  useEffect(() => refreshTodos(), []);\n  function refreshTodos() {\n    getTodos(id).then(response => {\n      setTodos(response.data);\n    }).catch(error => console.log(error));\n  }\n  function deleteTodoFunction(id) {\n    console.log('clicked ' + id);\n    deleteTodo(id).then(() => {\n      setMessage(`Delete of todos with id = ${id} successful`);\n      refreshTodos();\n    }).catch(error => console.log(error));\n  }\n  function updateTodo(id) {\n    console.log('clicked ' + id);\n    navigate(`/todo/${id}`);\n  }\n  function addNewTodo() {\n    navigate(`/todo/-1`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-form\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"What's the Plan for Today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Todo, {\n        todos: todos,\n        completeTodo: completeTodo,\n        removeTodo: removeTodo,\n        updateTodo: updateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(ListTodosComponent, \"BULT5495rQpSUkXlSDYKGTy58Vw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ListTodosComponent;\nexport default ListTodosComponent;\nvar _c;\n$RefreshReg$(_c, \"ListTodosComponent\");","map":{"version":3,"names":["useEffect","useState","useNavigate","getTodos","deleteTodo","useParams","ListTodosComponent","id","today","Date","navigate","targetDate","getFullYear","getMonth","getDay","todos","setTodos","message","setMessage","refreshTodos","then","response","data","catch","error","console","log","deleteTodoFunction","updateTodo","addNewTodo","completeTodo","removeTodo"],"sources":["C:/Users/Vini/Documents/ToDoREACT/src/components/todo/ListTodosComponent.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport {useNavigate} from 'react-router-dom'\nimport { getTodos, deleteTodo } from \"./api/TodoApiService\"\nimport {useParams} from 'react-router-dom'\n\nfunction ListTodosComponent() {\n\n    const {id} = useParams()\n\n    const today = new Date()\n\n    const navigate = useNavigate()\n    \n    const targetDate = new Date(today.getFullYear()+12, today.getMonth(), today.getDay())\n\n    const [todos, setTodos] = useState([])\n\n    const [message,setMessage] = useState(null)\n    \n    useEffect ( () => refreshTodos(), [])\n\n    function refreshTodos() {\n        \n        getTodos(id)\n        .then(response => {\n            setTodos(response.data)\n        }\n            \n        )\n        .catch(error => console.log(error))\n    \n    }\n\n    function deleteTodoFunction(id) {\n        console.log('clicked ' + id)\n        deleteTodo(id)\n        .then(\n\n            () => {\n                setMessage(`Delete of todos with id = ${id} successful`)\n                refreshTodos()\n            }\n        )\n        .catch(error => console.log(error))\n    }\n\n    function updateTodo(id) {\n        console.log('clicked ' + id)\n        navigate(`/todo/${id}`)\n    }\n\n    function addNewTodo() {\n        navigate(`/todo/-1`)\n    }\n\n    return (\n        <div className=\"todo-form\">\n            <>\n      <h1>What's the Plan for Today?</h1>\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>   \n        </div>\n    )\n}\n\nexport default ListTodosComponent"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,UAAU,QAAQ,sBAAsB;AAC3D,SAAQC,SAAS,QAAO,kBAAkB;AAAA;AAAA;AAE1C,SAASC,kBAAkB,GAAG;EAAA;EAE1B,MAAM;IAACC;EAAE,CAAC,GAAGF,SAAS,EAAE;EAExB,MAAMG,KAAK,GAAG,IAAIC,IAAI,EAAE;EAExB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9B,MAAMS,UAAU,GAAG,IAAIF,IAAI,CAACD,KAAK,CAACI,WAAW,EAAE,GAAC,EAAE,EAAEJ,KAAK,CAACK,QAAQ,EAAE,EAAEL,KAAK,CAACM,MAAM,EAAE,CAAC;EAErF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACgB,OAAO,EAACC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE3CD,SAAS,CAAG,MAAMmB,YAAY,EAAE,EAAE,EAAE,CAAC;EAErC,SAASA,YAAY,GAAG;IAEpBhB,QAAQ,CAACI,EAAE,CAAC,CACXa,IAAI,CAACC,QAAQ,IAAI;MACdL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAEA,CACAC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAEvC;EAEA,SAASG,kBAAkB,CAACpB,EAAE,EAAE;IAC5BkB,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGnB,EAAE,CAAC;IAC5BH,UAAU,CAACG,EAAE,CAAC,CACba,IAAI,CAED,MAAM;MACFF,UAAU,CAAE,6BAA4BX,EAAG,aAAY,CAAC;MACxDY,YAAY,EAAE;IAClB,CAAC,CACJ,CACAI,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC;EAEA,SAASI,UAAU,CAACrB,EAAE,EAAE;IACpBkB,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGnB,EAAE,CAAC;IAC5BG,QAAQ,CAAE,SAAQH,EAAG,EAAC,CAAC;EAC3B;EAEA,SAASsB,UAAU,GAAG;IAClBnB,QAAQ,CAAE,UAAS,CAAC;EACxB;EAEA,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAA,wBACN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmC,eACnC,QAAC,IAAI;QACH,KAAK,EAAEK,KAAM;QACb,YAAY,EAAEe,YAAa;QAC3B,UAAU,EAAEC,UAAW;QACvB,UAAU,EAAEH;MAAW;QAAA;QAAA;QAAA;MAAA,QACvB;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACO;AAEd;AAAC,GA/DQtB,kBAAkB;EAAA,QAEVD,SAAS,EAILH,WAAW;AAAA;AAAA,KANvBI,kBAAkB;AAiE3B,eAAeA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}