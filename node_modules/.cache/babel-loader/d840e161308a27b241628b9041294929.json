{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vini\\\\Documents\\\\ToDoREACT\\\\src\\\\components\\\\TodoForm.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  const [counter, setCounter] = useState(1);\n  const [isInputValid, setIsInputValid] = useState(true);\n  const incrementCounter = () => {\n    setCounter(counter + 1);\n  };\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') {\n      setIsInputValid(false);\n    } else {\n      props.onSubmit({\n        id: counter,\n        text: input\n      });\n      incrementCounter();\n      setInput('');\n      setIsInputValid(true);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.edit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a todo\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    className: `todo-input ${!isInputValid ? 'invalid' : ''}`,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), !isInputValid && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }\n  }, \"Field cannot be empty\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"todo-button edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Add a todo\",\n    value: input,\n    onChange: handleChange,\n    name: \"text\",\n    className: \"todo-input\",\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"todo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Add todo\")));\n}\nexport default TodoForm;","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","counter","setCounter","isInputValid","setIsInputValid","incrementCounter","current","focus","handleChange","e","target","handleSubmit","preventDefault","trim","onSubmit","id","text","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","placeholder","onChange","name","ref","onClick"],"sources":["C:/Users/Vini/Documents/ToDoREACT/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const [counter, setCounter] = useState(1);\r\n\r\n  const [isInputValid, setIsInputValid] = useState(true);\r\n\r\n\r\n  \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n  const incrementCounter = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n  e.preventDefault();\r\n  if (input.trim() === '') {\r\n    setIsInputValid(false);\r\n  } else {\r\n    props.onSubmit({\r\n      id: counter,\r\n      text: input\r\n    });\r\n    incrementCounter();\r\n    setInput('');\r\n    setIsInputValid(true);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n      placeholder='Add a todo'\r\n      value={input}\r\n      onChange={handleChange}\r\n      name='text'\r\n      className={`todo-input ${!isInputValid ? 'invalid' : ''}`}\r\n      ref={inputRef}\r\n    />\r\n    { !isInputValid && <p className=\"error-message\">Field cannot be empty</p> }\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add todo\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}